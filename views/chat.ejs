<!DOCTYPE html>
<html>
<head>
<meta http-equiv="X-UA-Compatible" content="IE=Edge" charset="utf-8">

<title>chat [ecclesia]</title>
<link rel="stylesheet" href="/css/reveal.css">
<link rel="stylesheet" href="/css/bootstrap.min.css">
<link rel="stylesheet" href="css/idangerous.swiper.css">
<script type="text/javascript" src="/js/jquery-1.10.2.min.js"></script>
<script type="text/javascript" src="/js/jquery.cookie.js"></script>
<script type="text/javascript" src="/js/bootstrap.min.js"></script>
<script type="text/javascript" src="/js/lib/js/head.min.js"></script>
<script type="text/javascript" src="/js/reveal.js"></script>
<!-- <script type="text/javascript" src="/js/sketch.min.js"></script> -->
<script type="text/javascript" src="/js/eStroke.js"></script>
<script type="text/javascript" src="/js/Chart.min.js"></script>
<script type="text/javascript" src="/rtc/socket.io.js"></script>
<script type="text/javascript" src="/rtc/simplewebrtc.bundle.js"></script>
<script src="js/idangerous.swiper-2.1.min.js"></script>
<style type="text/css">
html {
  overflow-x: hidden;
}

body {
  width: 1347px;
}
.affix-left-bar {
  position: relative;
  display: inline-block;
  float: left;
  width: 220px;
  height: 600px;
}

.main {
  position: relative;
  display: inline-block;
  width: 900px;
  height: 600px;
}

.board {
  position: relative;
  left: 50%;
  margin-left: -400px;
  width: 800px;
  height: 400px;
  border: black solid 1px;
  border-radius: 5px;  
}
.sketch {
  position: absolute;
  top: 0;
  left: 0;
  padding: 0px;
  border: black solid 0px;
  border-radius: 5px;
  z-index: 2;
  background-color: rgba(255,255,255,0);
}
.swiper-container {
  position: relative;
  top: 10px;
  width: 800px;
  height: 200px;
  background-color: #fff;
  border: #000 solid 1px;
  border-radius: 5px;
}
.swiper-wrapper {
  width: 4000px;
}
.swiper-slide {
  margin-right: 10px;
}
.swiper-container img{
  width: 200px;
  height: 200px;
  float: left;
  border: red solid 1px;
}
.chart {
  position: relative;
  margin: 10px;
  display: inline;
}

.impress {
  position: absolute;
  margin: 0px;
  border: black solid 1px;

  border-radius: 5px;
}
.slides {
  border: black solid 1px;
  width: 800px;
  height: 400px;
  z-index: 1;
  zoom: 1;
}
section {
  height: 400px;
}

.navbar {
  margin-bottom: 5px;
}

.lazy {
  width: 100px;
  height: 100px;
}
.chart-label {
  width: 188px;
}

.oper-frame {
  position: absolute;
  width: 200px;
  height: 200px;
}

.single-chart {
  position: relative;
  float: left;
  width: 200px;
  height: 200px;
  padding: 5px;
  display: inline-block;
}
div.single-chart > button {
  position: absolute;
  right: 5px;
  top: 5px;
}

.center {
    text-align:center;
}

.center form {
    display:inline-block;
}

.sidebar {
  position: relative;
  float: left;
  border: black solid 1px;
  border-radius: 5px;
  width: 220px;
  margin-left: 10px;
  height: 610px;
}

.video-frame {
  margin: 20px 20px 0px 20px;
  position: relative;
  width: 180px;
  height: 180px;
  border: black solid 1px;
  border-radius: 5px;
}

.video-frame > video {
  margin: 10px 10px 10px 10px;
  position: relative;
  width: 160px; height: 160px;
  border: black solid 1px;
  border-radius: 5px;
}
#scan-file {
  position: relative;
  left: 497px;
  top: 10px;
  width: 71px;
}
#MsgList {
  position: relative;
  width: 420px;
}
</style>
</head>
<body>
<nav class="navbar navbar-default " role="navigation">
  <div class="container-fluid">
    <div class="navbar-header">
      <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#tool-bar">
        <span class="sr-only">navigation</span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
      </button>
      <a class="navbar-brand" href="#">Tool Box</a>
    </div>

    <div class="collapse navbar-collapse" id="tool-bar">
      <ul class="nav navbar-nav">
        <li class="active">
          <a href="#" data-toggle="modal" data-target="#add-chart-modal">
            <span class="glyphicon glyphicon-stats"></span> Add Chart</a>
        </li>
        <li>
          <a href="#" data-toggle="modal" data-target="#add-impress-modal">
            <span class="glyphicon glyphicon-file"></span> Add Impress</a>
        </li>
        <li>
          <a id="test-add-chart" href="#" data-toggle="modal" data-target="">
            <span class="glyphicon glyphicon-file"></span> Add Pie</a>
        </li>
        <li>
          <a id="create-room-btn" data-toggle="modal" data-target="">
            <span class="glyphicon glyphicon-file"></span> Create Room</a>
        </li>
      </ul>
    </div>
  </div>
</nav>
<!-- navigator models -->
<div class="modal fade" id="add-chart-modal" tabindex="-1" role="dialog" aria-labelledby="chart-modal-label" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <!-- <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button> -->
        <h4 class="modal-title" id="chart-modal-label">Choose Chart</h4>
      </div>
      <div class="modal-body">

        <div id="chart-insert-carousel" class="carousel slide" data-ride="carousel">

          <!-- Wrapper for slides -->
          <div class="carousel-inner" role="listbox">
            <div class="item active">
              <div class="container">
                <div class="row">
                  <div class="col-md-2 col-ms-2 col-lg-2 chart-label">
                    <div class="thumbnail">
                      <a class="add-opt" title="line"><img class="lazy" src="/img/chart-line.png" ></a>
                      <div class="caption">
                      </div>
                    </div>
                  </div>

                  <div class="col-md-2 col-ms-2 col-lg-2 chart-label">
                    <div class="thumbnail">
                      <a class="add-opt" title="bar"><img class="lazy" src="/img/chart-bar.png" ></a>
                      <div class="caption">
                        
                      </div>
                    </div>
                  </div>

                  <div class="col-md-2 col-ms-2 col-lg-2 chart-label">
                    <div class="thumbnail">
                      <a class="add-opt" title="radar"><img class="lazy" src="/img/chart-radar.png" ></a>
                      <div class="caption">
                        
                      </div>
                    </div>
                  </div>

                </div>
                <div class="row">
                  <div class="col-md-2 col-ms-2 col-lg-2 chart-label">
                    <div class="thumbnail">
                      <a class="add-opt" title="polararea"><img class="lazy" src="/img/chart-polararea.png" ></a>
                      <div class="caption">
                       
                      </div>
                    </div>
                  </div>

                  <div class="col-md-2 col-ms-2 col-lg-2 chart-label">
                    <div class="thumbnail">
                      <a class="add-opt" title="pie"><img class="lazy" src="/img/chart-pie.png" ></a>
                      <div class="caption">
                        
                      </div>
                    </div>
                  </div>

                  <div class="col-md-2 col-ms-2 col-lg-2 chart-label">
                    <div class="thumbnail">
                      <a class="add-opt" title="doughnut"><img class="lazy" src="/img/chart-doughnut.png" ></a>
                      <div class="caption">
                      </div>
                    </div>
                  </div>
                </div>
              </div><!--end container-->
        
            </div>

            <div class="item">
              <div class="chart-insert chart-insert-form center" role="form">
                <div class="input-group input-group-md col-md-8 col-md-offset-2">
                  <input type="text" class="form-control chart-data-input chart-data-axis" placeholder="X-axis">
                </div>
                <br>
                <div class="input-group input-group-md col-md-8 col-md-offset-2">
                  <input type="text" class="form-control chart-data-input chart-data-val" placeholder="data">
                </div>                
                <br>
                <div class="chart-btn input-group input-group-md col-md-8 ">

                  <button id="chart-data-add" class="btn btn-primary col-md-offset-6">
                    <span class="glyphicon glyphicon-plus"></span>
                  </button>
                  <button id="chart-data-submit" class="btn btn-primary col-md-offset-2">
                    <span class="glyphicon glyphicon-chevron-left"></span>
                  </button>
                </div>
                <br>
                <div class="carousel-cpation input-group input-group-md col-md-8 container preview-container">
                  <canvas id="chart-preview" width="300" height="300"></canvas>
                </div>
              </div>
            </div>
            
          </div>

        </div>

      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
        <button type="button" class="btn btn-primary" id="insert-btn">Insert</button>
      </div>
    </div>
  </div>
</div>
<!-- add impress modal -->
<div class="modal fade" id="add-impress-modal" tabindex="-1" role="dialog" aria-labelledby="add-impress-label" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
        <h4 class="modal-title" id="add-impress-label">Add Impress File</h4>
      </div>
      <div class="modal-body">
        <form enctype="multipart/form-data" method="POST" onsubmit="return HasChecked;">

          <input type="file" id="path" onchange="CheckExt(this);upfile.value=this.value;" style="width:180px;display:none">
          <input type="text" id="upfile" class="form-control" placeholder="Select a file">
          <input type="button" id="scan-file" class="btn btn-primary" value="Scan" onclick="path.click()">
          
          <div id="MsgList"></div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        <button type="button" id="UploadButton" class="btn btn-primary" value="" disabled>Upload</button>
      </div>
    </div>
  </div>
</div>
<!-- end -->
<div class="container-fluid">
  <div class="affix-left-bar">
    <div id="all-videos" class="sidebar">
      <div id="local-video" class="video-frame"></div>
    </div>
  </div>

  <div class="main">
    <!-- sidebar of remote client videos -->
    <!-- main board and charts blank -->
    <div class="board">
      <div id="reveal" class="reveal impress">

        <div class="slides">
          <section data-markdown>
            <script type="text/template">
                ```cpp
                #include <iostream>
                using namespace std;
                int main() { cout << "hello world" << endl; return 0; }
                ```
            </script>
          </section>
          <section data-markdown>
            <script type="text/template">
                ```php
                public function foo()
                {
                    $foo = array(
                        'bar' => 'bar'
                    )
                }
                ```
            </script>
          </section>
          <section>
            <h1>wtf</h1>
          </section>
          <section>
            <h1>hell</h1>
          </section>
        </div>
      </div>
    </div>
    
    <div class="charts">
      <div class="swiper-container">
        <div class="swiper-wrapper">
            <!-- 这里放chart<div class="swiper-slide">...</div>-->
          </div>
          <div class="pagination"></div>
        </div>
      </div>
    </div><!-- end charts -->
  </div><!-- end main -->
</div>
<script type="text/javascript">
/*JS前端检测上传文件类型以*/
var FileObj,FileExt,ErrMsg,FileMsg,HasCheked;//全局变量 图片相关属性
//以下为限制变量
var AllowExt=".md|.markdown|.txt|";
HasChecked=false;
 //显示提示信息 tf=true 显示文件信息 tf=false 显示错误信息 msg-信息内容
function ShowMsg(msg,tf) 
{
  if(!tf)
  {
      document.all.UploadButton.disabled=true;
      FileObj.outerHTML=FileObj.outerHTML;
      MsgList.innerHTML=msg;
      HasChecked=false;
  }
  else
  {
      document.all.UploadButton.disabled=false;
      MsgList.innerHTML=msg;
      HasChecked=true;
  }
}

function CheckExt(obj)
{
  ErrMsg="";
  FileMsg="";
  FileObj=obj;
  HasChecked=false;
  if(obj.value=="")return false;
  MsgList.innerHTML="  Waitting...";
  document.all.UploadButton.disabled=true;
  FileExt=obj.value.substr(obj.value.lastIndexOf(".")).toLowerCase();

  if(AllowExt!=0&&AllowExt.indexOf(FileExt+"|")==-1) //判断文件类型是否允许上传
  {
      ErrMsg="  The document type does not allow uploads. Please upload "+AllowExt+" type of file, the current file type is"+FileExt;
      ShowMsg(ErrMsg,false);
      return false;
  }
  FileMsg="  File Extension is "+FileExt;
  ShowMsg(FileMsg,true);
}

Reveal.initialize({
  width: 800,
  height: 400,
  margin: 0.5,
  minScale: 1.0,
  maxScale: 1.0,
  center: true,
  transition: 'liner',
  transitionSpeed: 'fast',
  backgroundTransition: 'slide',

  dependencies: [
    { src: 'js/lib/js/classList.js', condition: function() { return !document.body.classList; } },
    { src: 'js/plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
    { src: 'js/plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
    { src: 'js/plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } },
    // { src: 'js/plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } },
    // { src: 'js/plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } },
    // { src: 'js/plugin/remotes/remotes.js', async: true, condition: function() { return !!document.body.classList; } },
    { src: 'js/plugin/math/math.js', async: true }
    ]  
});

Reveal.addEventListener( 'ready', function( event ) {
  var present = $('section.present');
  if (present.children('canvas').length != 0) {
    console.log('has canvas')
    var curCanvas = $('.present > canvas');
    if (!curCanvas.hasClass('sketch-present')) {
      // console.log('no active class')
      curCanvas.addClass('sketch-present');
    }
  }
  else {
    present.append('<canvas class="sketch sketch-present" width="800" height="400"></canvas>');
  }

    $('.sketch-present').Stroke(function (point) {
      webrtc.sendSketchPointData(point);
    });

});

Reveal.addEventListener( 'slidechanged', function( event ) {
  $('.sketch-present').removeClass('sketch-present');
  var present = $('.slides > section.present');
  if (present.children('canvas').length != 0) {
    // console.log('has canvas')
    var curCanvas = $('.present > canvas');
    if (curCanvas.hasClass('sketch-present') == false) {
      // console.log('no active class')
      curCanvas.addClass('sketch-present');
    }
  }
  else {
    present.append('<canvas class="sketch sketch-present" width="800" height="400"></canvas>');
  }
    $('.sketch-present').Stroke(function (point) {
      webrtc.sendSketchPointData(point);
    });
});

var genChart, prvwChart, genChartData;

$(document).ready(function() {
  $.fn.carousel.Constructor.prototype.keydown = function() { };
  $('slides').attr('zoom','1.0')

  $('#test-add-chart').click(function() {
    var addContent =
    '<div class="single-chart">' +
      '<canvas class="chart" width="180" height="180"></canvas>' +
      '<button class="btn btn-default btn-xs rm-chart"><span class="glyphicon glyphicon-remove"></span></button>' +
    '</div>';
    $('#charts').append(addContent);
    var ctx = $('canvas.chart').last().get(0).getContext('2d');
    var pieData = [
      {
        value : 20,
        color : "#F38630",
        label : 'Sleep',
        labelColor : 'white',
        labelFontSize : '24'
      },
      {
        value : 30,
        color : "#E38231",
        label : 'Wocao',
        labelColor : 'white',
        labelFontSize : '24'
      },
      {
        value : 50,
        color : "#FFF630",
        label : 'Heihei',
        labelColor : 'white',
        labelFontSize : '24'
      },
      
    ];
    
    new Chart(ctx).Pie(pieData);
    $('.rm-chart').click(function() {
      // console.log('rm corresponding chart');

      $(this).parent().remove();
    });
  });

  $('.carousel').carousel({
    interval: false
  });

  // go to page fill blanks of chart data
  $('.add-opt').click(function() {
    var chart_t = $(this).attr('title');
    var previewCanvas = $('#chart-preview');
    
    previewCanvas.data('chart_t', chart_t);
    if (previewCanvas.attr('width') && previewCanvas.attr('height')) {
      // previewCanvas.get(0).getContext('2d').clearRect(0,0,300,300);
      // previewCanvas.attr({ width:"0", height:"0" });
      // console.log('cleart rect');
    }
    $('#chart-insert-carousel').carousel('next');
  });

  // back to choose charts
  $('#chart-data-submit').click(function() {
    var previewCanvas = $('#chart-preview');
    // previewCanvas.attr({ width:"0", height:"0" });
    // previewCanvas.get(0).getContext('2d').clearRect(0,0,300,300);
    genChart.destroy();
    $('#chart-insert-carousel').carousel('prev');

  });

  // preview chart
  $('#chart-data-add').click(function() {
    var len = $('.chart-insert').children('div').length;
    if (len > 2 && len < 6) {
      var nums = ['axis','one','two','three'];
      var inputForm = '<div class="input-group input-group-md col-md-8 col-md-offset-2">' +
        '<input type="text" class="form-control chart-data-input chart-data-val" placeholder="data">';
      var rmBtn = '<span class="input-group-btn"><button class="btn btn-primary rm-input-btn">' + 
                    '<span class="glyphicon glyphicon-remove"></span></button></span></div><br>'
      $(inputForm + rmBtn).insertBefore('.chart-btn');
    }
    $('.rm-input-btn').click(function() {
      var $parentDiv = $(this).parent().parent();
      $parentDiv.next().remove(); $parentDiv.remove();
    });

    listenChartDataInput();
  });

  listenChartDataInput();
  InsertGenChart();

});


function PreviewChart(labels, chart_t) {
  this.angularChartColors = [
    {
      fillColor: 'rgba(220,220,220,0.5)',
      strokeColor: 'rgba(220,220,220,1)',
      pointColor: 'rgba(220,220,220,1)',
    },
    {
      fillColor: 'rgba(151,187,205,0.5)',
      strokeColor: 'rgba(151,187,205,1)',
      pointColor: 'rgba(151,187,205,1)',
    },
    {
      fillColor: 'rgba(0,0,0,0.5)',
      strokeColor: 'rgba(0,0,51,1)',
      pointColor: 'rgba(0,0,102,1)',
    }
  ];

  this.roundChartColors = ['#F38630','#E0E4CC','#69D2E7','#F7464A',
  '#E2EAE9','#D4CCC5','#949FB1','#4D5360'];

  this.types = ['line','bar','radar',
  'polar','pie','dougnut'];

  this.labels  = labels;
  this.chart_t = $('#chart-preview').data('chart_t');
  // this.datas   = datas   || [50];
}

PreviewChart.prototype.collectAttrs = function() {
  var self = this,
      chartData,
      columnData;      
  if (['line','bar','radar'].indexOf(self.chart_t) != -1) {
    var values = [];
    $('.chart-data-val').each(function(index, element) {
      columnData = $(this).val().split(' ').map(Number);
      
      values.push({
        fillColor : self.angularChartColors[index].fillColor,
        strokeColor: self.angularChartColors[index].strokeColor,
        pointColor: self.angularChartColors[index].pointColor,
        pointStrokeColor : "#fff",
        data: columnData
      });
    });
    chartData = {
      labels: self.labels,
      datasets: values
    };
    // console.log('labels',self.labels);
    // console.log('datasets',chartData.datasets.length);
  } else {
    chartData = [];
    $('.chart-data-val').each(function(index, element) {
      columnData = $(this).val().split(' ').map(Number);
      columnData.forEach(function (data, i) {
        chartData.push({
          value : data,
          color : self.roundChartColors[i],
          label : self.labels[i],
          labelColor : 'white',
          labelFontSize : '24'
        });
      });
    });
  }
  return chartData;
}

PreviewChart.prototype.sketchPreviewChart = function(selector, data) {
  var chartData = data || this.collectAttrs();
  var previewCtx = selector.get(0).getContext('2d');
  switch (this.chart_t) {
    case 'line':
      genChart = new Chart(previewCtx).Line(chartData);
      break;
    case 'bar':
      genChart = new Chart(previewCtx).Bar(chartData);
      break;
    case 'radar':
      genChart = new Chart(previewCtx).Radar(chartData);
      break;
    case 'polararea':
      genChart = new Chart(previewCtx).PolarArea(chartData);
      break;
    case 'pie':
      genChart = new Chart(previewCtx).Pie(chartData);    
      break;
    case 'dougnut':
      genChart = new Chart(previewCtx).Doughnut(chartData);
      break;
    default:
      break;
  }
  genChartData = chartData;
  $('#charts').data('newest', chartData);
  $('#charts').data('chart_t', this.chart_t);
}

function listenChartDataInput() {
// preview chart to insert
  $('.chart-data-input').dblclick(function() {
    $('#chart-preview').attr({ width:"300", height:"300" });
    var inputLabels = $('.chart-data-axis').val().split(' ');
    if (!inputLabels.length) {
      window.console.log('empty axis');
      return;
    }
    var chart_t = $('#chart-preview').data('chart_t');
    prvwChart = new PreviewChart(inputLabels, chart_t).sketchPreviewChart($('#chart-preview'));
  });
}

function InsertGenChart() {
  $('#insert-btn').click(function() {
    var addContent =
    '<div class="single-chart">' +
      '<canvas class="chart" width="180" height="180"></canvas>' +
      '<button class="btn btn-default btn-xs rm-chart"><span class="glyphicon glyphicon-remove"></span></button>' +
    '</div>';
    var charts = $('#charts');
    charts.append(addContent);
    var ctx = $('canvas.chart').last().get(0).getContext('2d');
    new PreviewChart(genChartData, charts.data('chart_t'))
    .sketchPreviewChart($('canvas.chart').last(), genChartData);
    $('.rm-chart').click(function() {
      // console.log('rm corresponding chart');

      $(this).parent().remove();
    });
    $('#add-chart-modal').modal('hide');
  });
}

</script>

<!-- rtc part -->
<script type="text/javascript">
var room = location.search && location.search.split('?')[1];

var webrtc = new SimpleWebRTC({
  // url: "http://localhost:8888",
  localVideoEl: 'local-video',
  remoteVideoEl: 'all-videos',
  autoRequestMedia: true,
  debug: false,
  detectSpeakingEvents: true,
  autoAdjustMic: false
});

webrtc.on('readyToCall', function() {
  if (room) webrtc.joinRoom(room);
});

webrtc.on('videoAdded', function (video, peer) {
  var remotes = $('.sidebar');
  var addPeer = $(document.createElement('div'));
  addPeer.addClass('video-frame');
  addPeer.attr('id', 'video_' + webrtc.getDomId(peer));
  addPeer.append(video);
  remotes.append(addPeer);
});

webrtc.on('videoRemoved', function (video, pper) {
  var remotes = $('.sidebar');
  var leavePeer = $('#video_' + webrtc.getDomId(peer));
  if (remotes && leavePeer) {
    leavePeer.remove();
  }
})

webrtc.on('rtcSyncStroke', function (point) {
  // console.log('syncStroke event');
  $('.sketch-present').syncStroke(point);
});

if (!room) {
  $('#create-room-btn').click(function () {
    // use uuid to create room, pass null to first arg
    webrtc.createRoom(null, function (err, name) {
      var roomUrl = location.pathname + '?' + name;
      if (!err) {
        history.replaceState(null, null, roomUrl);
      }
    })
  })
} else {
  console.log('already in a room');
}
  var mySwiper = new Swiper('.swiper-container',{
    pagination: '.pagination',
    paginationClickable: true,
    freeMode: true,
    freeModeFluid: true
  })
</script>
</body>
</html>